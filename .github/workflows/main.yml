name: CICD for Serverless Application
run_name: ${{ github.actor }} is doing CICD for Serverless Application

on:
  push:
    branches: [ main, "*" ]

jobs:
  pre_deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job is automatically triggered by a ${{ github.event_name }} event."

  install_dependencies:
    runs-on: ubuntu-latest
    needs: pre_deploy
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2
      - name: Run installation of dependencies command
        run: npm install

  unit_testing:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2
      - name: Run installation of dependencies command
        run: npm install
      - name: Run unit testing command
        run: npm run test

  deploy:
    runs-on: ubuntu-latest
    needs: unit_testing
    strategy:
      matrix:
        node-version: [14.x]  # Define the versions you want to use here
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - name: Serverless deploy to AWS
        uses: serverless/github-action@v2
        with:
          args: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Retrieve secret from AWS
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: secret-id-1,secret-id-2  # Provide actual secret IDs
        env:
          AWS_REGION: ap-southeast-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Show My Secrets
        run: |
          for var in $(env | grep '^SECRET_ID_'); do
            echo "Variable: $var"
          done
